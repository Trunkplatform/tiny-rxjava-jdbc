apply plugin: 'java'
apply plugin: 'maven'

group = 'com.trunk.rx.jdbc'

def baseVersion = '1.5.6'

description = 'Functional access to JDBC using RxJava'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configure(subprojects) {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        maven {
            credentials{
                username bintrayUser
                password bintrayApiKey
            }
            url 'http://dl.bintray.com/trunkplatform/trunk-java-oss'
        }
    }

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group 'com.trunk.rx.jdbc'
    version =  baseVersion

    sourceCompatibility = 1.8

    dependencies {
        compile 'io.reactivex:rxjava:1.1.0'

        compile 'org.slf4j:slf4j-api:1.7.19'

        testCompile 'org.testng:testng:6.8'
        testCompile 'org.mockito:mockito-core:2.0.40-beta'
        testCompile 'org.liquibase:liquibase-core:3.4.2'
        testCompile 'com.h2database:h2:1.4.191'

        testCompile 'org.hamcrest:hamcrest-all:1.3'

        testCompile 'io.reactivex:rxjava-debug:1.0.3'
    }

    test {
        beforeTest { descriptor ->
            logger.lifecycle("Running: " + descriptor)
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        archives sourcesJar, javadocJar
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                pom.withXml {
                    asNode().dependencies.'*'.findAll() {
                        it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }
                    }.each() {
                        it.scope*.value = 'compile'
                    }
                }
                from components.java
                artifact sourcesJar {
                    classifier "sources"
                }
                artifact javadocJar {
                    classifier "javadoc"
                }
            }
        }
    }
}
